node_id={NODE_ID}
node_name={NODE_NAME}
node_port={NODE_PORT}
#server.servlet.context-path=/${NODE_NAME}
#eureka.instance.metadataMap.contextPath=/${NODE_NAME}
#logging.level.org.springframework.security.web=DEBUG
#eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka
eureka.client.instance.preferIpAddress = true
spring.application.name=Node


spring.kafka.consumer.properties.spring.json.trusted.packages=atypon.app.node.kafka.event

#Consumer
spring.kafka.bootstrap-servers=broker:29092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.group-id=${NODE_NAME}

#Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


#Mappings
spring.kafka.consumer.properties.spring.json.type.mapping.event1=atypon.app.node.kafka.event.WriteEvent
spring.kafka.producer.properties.spring.json.type.mapping.event1=atypon.app.node.kafka.event.WriteEvent

spring.kafka.consumer.properties.spring.json.type.mapping.event2=atypon.app.node.kafka.event.CreateDocumentEvent
spring.kafka.producer.properties.spring.json.type.mapping.event2=atypon.app.node.kafka.event.CreateDocumentEvent
